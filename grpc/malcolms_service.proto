syntax = "proto3";

// gRPC service definition.
package grpc;
option go_package = "github.com/p-nordmann/malcolm-sampler/grpc";


service MalcolmSampler {
    // AddBoundaries registers boundaries of a parameter space.
    //
    // It returns the UUID to refer to these boundaries.
    rpc AddBoundaries(Boundaries) returns (BoundariesUUID) {}

    // AddPosterior registers posterior values sampled from the true posterior.
    //
    // The sampling problem starts recording when the first sample is streamed.
    // It finishes when the stream is closed and an identification token is returned.
    //
    // This rpc expects samples in batches.
    rpc AddPosterior(stream PosteriorValuesBatch) returns (PosteriorUUID) {}

    // MakeSamples samples the requested number of points.
    //
    // Streams the generated points.
    //
    // Whether samples are batched in responses is implementation-specific.
    rpc MakeSamples(MakeSamplesRequest) returns (stream SamplesBatch) {}
}

message BoundariesUUID {
    string value = 1;
}

message PosteriorUUID {
    string value = 1;
}

// Boundaries describes the bounding box of an inversion problem.
//
// Infima are the lower bounds of the parameter space, while suprema are the higher bounds.
message Boundaries {
    int64 dimension = 1;
    repeated double infima = 2;
    repeated double suprema = 3;
}

// PosteriorValuesBatch represents a batch of samples with posterior values.
//
// It expects row-major order for coordinates.
message PosteriorValuesBatch {
    BoundariesUUID uuid = 1;
    repeated double coordinates = 2;
    repeated double posterior_values = 3;
}

// MakeSamplesRequest represents a request to generate samples.
//
// The underlying algorithm is a random walk (MCMC).
// `origin` is the point where the walk starts from and `amount` is the number of samples to generate.
message MakeSamplesRequest {
    PosteriorUUID uuid = 1;
    repeated double origin = 2;
    int64 amount = 3;
}

// SamplesBatch represents a batch of generated samples.
//
// It stores coordinates in row-major order.
//
// Whether it holds more than 1 point is implementation-specific.
message SamplesBatch {
    repeated double coordinates = 1;
}

